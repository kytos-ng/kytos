[daemon]

# Full path of the working directory to which the process should change on
# daemon start. Since a filesystem cannot be unmounted if a process has its
# current working directory on that filesystem, this should either be left at
# default or set to a directory that is a sensible home directory for the
# daemon while it is running. Default is /var/lib/kytos.
workdir = {{ prefix }}/var/lib/kytos

# PID file to write. When the controller starts, it will save the his pid on
# this file.
pidfile = {{ prefix }}/var/run/kytos/kytosd.pid

# This controller can be started in two modes: 'daemon' mode or 'interactive'
# mode. On daemon mode, the process will detach from terminal when starts,
# running in background. When running on 'interactive' mode, you will receive a
# console right after the controller starts. Default is 'daemon' mode.
daemon = True

# Run the controller in debug mode or not. Default is False.
debug = False

# Logging config file. Please specify the full path of logging config file.
logging = {{ prefix }}/etc/kytos/logging.ini

# List of decorators to be applied to the Logger Class
logger_decorators = ["kytos.core.logger_decorators.queue_decorator"]

# The listen parameter tells kytos controller to accept incoming requests
# only in the specified address. Default is 0.0.0.0.
listen = 0.0.0.0

# The port parameter tells kytos controller to accept and to send
# openflow packets using TCP protocol. Default is 6653.
port = 6653

# Southbound protocol name of the TCP server. Don't use quotes in the string.
protocol_name =

# Switch connection timeout in seconds.
connection_timeout = 130

# The api_port parameter tells kytos controller to expose a port to accept
# incoming requests and to send a response from kytos API REST.
# Default is 8181.
api_port = 8181

# Whether to include a traceback response when a internal server error happens.
api_traceback_on_500 = True

# When a new entity (switch, interface or link) is created it is
# administratively disabled by default. Change here to modify this behavior.
# enable_entities_by_default = False

# Where should the controller look for network apps ?
# This directory has both core napps and user installed napps.
napps = {{ prefix }}/var/lib/kytos/napps

napps_repositories = [
    "https://napps.kytos.io/repo/"
    ]

# Pre installed napps. List of Napps to be pre-installed and enabled.
# Use double quotes in each NApp in the list, e.g., ["username/napp"].
napps_pre_installed = []

# The jwt_secret parameter is responsible for signing JSON Web Tokens.
jwt_secret = {{ jwt_secret }}

# Maximum number of thread workers in a thread pool, if it's set as empty dict {} no thread pools will be used.
# The following pools are available by default to be used in the listen_to decorator:
# - sb: it's used automatically by kytos/of_core.* events, it's meant for southbound related messages
# - app: it's meant for general NApps event, it's default pool if no other one has been specified
# - db: it can be used by for higher priority db related tasks (need to be parametrized on decorator)
# - api: Not used by events, but instead API requests handling/processing. For worst case scenario, should be equal to two thirds of the total EVCs.
thread_pool_max_workers = {"sb": 256, "db": 256, "app": 512, "api": 512}

# Queue monitors are for detecting and alerting certain queuing thresholds over a delta time.
# Each queue size will be sampled every second. min_hits / delta_secs needs to be <= 1
# hits/seconds is measured as a fixed window if the sampled rate is over min_hits/second, it'll log the records at the end of each window
# You can also set log_at_most_n > 0 if you'd like to have extra information about the sampled "n" hits

# The queue size is the internal of the thread pool, it's unbounded, if it's queuing too much you might try to want to increase the number of thread pools workers
thread_pool_queue_monitors =
  [
    {
      "min_hits": 5,
      "delta_secs": 5,
      "min_queue_full_percent": 100,
      "log_at_most_n": 0,
      "queues": ["sb", "app", "db"]
    }
  ]

# The queue size is derived frome each buffer queue
event_buffer_monitors =
  [
    {
      "min_hits": 5,
      "delta_secs": 5,
      "min_queue_full_percent": 100,
      "log_at_most_n": 0,
      "buffers": ["msg_in", "msg_out", "raw", "app"]
    }
  ]

# Configuration for KytosEventBuffers
# Valid event buffers are "msg_in", "msg_out", "app", "conn", and "raw".
# Valid queue types are:
# - queue: Default queue class provided by janus
# - priority: PriorityQueue class provided by janus

event_buffer_conf =
    {
        "msg_out": {
            "queue": {
                "type": "priority",
                "maxsize": "threadpool_sb",
                "maxsize_multiplier": 2
            }
        },
        "msg_in": {
            "queue": {
                "type": "priority",
                "maxsize": "threadpool_sb",
                "maxsize_multiplier": 2
            }
        },
        "raw": {
            "queue": {
                "type": "queue",
                "maxsize": "threadpool_sb",
                "maxsize_multiplier": 2
            }
        },
        "app": {
            "queue": {
                "type": "queue",
                "maxsize": "threadpool_app",
                "maxsize_multiplier": 2
            }
        }
    }

# Time to expire authentication token in minutes
token_expiration_minutes = 180

# NApps database. Supported values: mongodb (don't use quotes in the string)
database =

# APM backend. Supported values: es (elasticsearch, don't use quotes in the string)
apm =

# Define URLs that will require authentication
#
# This must be a list of part of URLs. For example, if "kytos/mef_eline"
# is in the list, then every URL containing "kytos/mef_eline" will match
# it and, therefore, require authentication.
# authenticate_urls = ["kytos/mef_eline", "kytos/pathfinder"]

# Define the max number of connections to accept before additional
# connections are automatically rejected. This limits the number of connections
# made by HTTP requests (GET, POST, PATCH) used by the users and some NApps like
# of_lldp, mef_eline. "threadpool" is the default value to take the same
# value as thread_pool_max_workers["api"]=512.
# It is recommended that "api" is bigger than "api_concurrency_limit" since
# "mef_eline" can send a large amount of content in its requests depending
# on the number of EVCs, for more info check:
# https://github.com/kytos-ng/kytos/issues/489#issuecomment-2289932188
api_concurrency_limit = "threadpool"
